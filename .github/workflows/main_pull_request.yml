
name: main_pull_request

on:
  # This workflow is automatically triggered upon the approval of a pull request,
  # with a condition checking for changes in the source files or the pom.xml file in the development branch.
  pull_request:
    types:
      - closed

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  code_merge:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo The PR was merged
  main_build:
    needs: code_merge
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [21.x]     
    steps:
      - name: Checkout Source Codes
        uses: actions/checkout@v4
        with:
          ref: main
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test
      - name: List Contents of public Directory
        run: ls -R build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'build'  
  code_scan:
    needs: main_build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Codes
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0  
      - name: Analyze on SonarCloud
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  
  prd_deploy:
    environment:
      name: gh-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: code_scan
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
           timeout: 300000  # Time to timeout and cancel the deployment (5 minutes)
    

          
