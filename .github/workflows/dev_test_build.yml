name: dev_test_build
on:
  push:
    branches:
      - dev
    paths-ignore:
      - '.github/**'
      - 'public/**'
      - 'README.md' 
      - 'sonar-project.properties'
  workflow_dispatch:   
permissions:
  contents: read
  pages: write
  id-token: write
concurrency:
  group: "pages"
  cancel-in-progress: false
  
jobs:
  test_build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [21.x]     
    steps:
      - name: Checkout Source Codes
        uses: actions/checkout@v4
        with: 
          ref: dev
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build --if-present
      - run: CI=true npm test
  code_scan:
    needs: test_build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Codes
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Analyze on SonarCloud
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}     
  uat_deploy:
    needs: code_scan
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Codes
        uses: actions/checkout@v4
        with: 
          ref: dev
      - name: Use Node.js 21.x
        uses: actions/setup-node@v4
        with:
          node-version: '21.x'
          cache: 'npm'
      - run: npm ci
      - run: npm run build --if-present
      - name: List Contents of build Directory
        run: ls -R build  
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:  
          path: build
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
##Deploy to digital ocean
  build_docker_image:
    needs: test_build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Codes
        uses: actions/checkout@v4
        with:
          ref: dev
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/task-tracker:latest .
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_ACCESS_TOKEN }}
      - name: Push Docker image to Docker Hub
        run: docker push  ${{ secrets.DOCKER_HUB_USERNAME }}/task-tracker:latest
  deploy_to_digitalocean:
    needs: build_docker_image
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH Client
        run: sudo apt-get install -y openssh-client
      - name: Copy SSH private key
        run: echo "${{ secrets.DIGITALOCEAN_SSH_PRIVATE_KEY }}" > /root/.ssh/id_rsa && chmod 600 /root/.ssh/id_rsa
      - name: Get Container Name
        run: echo "CONTAINER_NAME=$(docker ps --format '{{.Names}}')" >> $GITHUB_ENV
      - name: Configure known hosts
        run: ssh-keyscan -t rsa 178.128.110.74 >> $HOME/.ssh/known_hosts
      - name: Deploy Docker container to DigitalOcean Droplet
        run: ssh -o StrictHostKeyChecking=no root@178.128.110.74 'docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/task-tracker:latest && docker stop $CONTAINER_NAME && docker rm $CONTAINER_NAME && docker run -d --name $CONTAINER_NAME -p 80:80 ${{ secrets.DOCKER_HUB_USERNAME }}/task-tracker:latest'
